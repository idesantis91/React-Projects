{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = getMemberValuePath;\n\nvar _astTypes = require(\"ast-types\");\n\nvar _getClassMemberValuePath = _interopRequireDefault(require(\"./getClassMemberValuePath\"));\n\nvar _getMemberExpressionValuePath = _interopRequireDefault(require(\"./getMemberExpressionValuePath\"));\n\nvar _getPropertyValuePath = _interopRequireDefault(require(\"./getPropertyValuePath\"));\n\nvar _resolveFunctionDefinitionToReturnValue = _interopRequireDefault(require(\"../utils/resolveFunctionDefinitionToReturnValue\"));\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\n\nconst SYNONYMS = {\n  getDefaultProps: 'defaultProps',\n  defaultProps: 'getDefaultProps'\n};\nconst POSTPROCESS_MEMBERS = {\n  propTypes: path => _astTypes.namedTypes.Function.check(path.node) ? (0, _resolveFunctionDefinitionToReturnValue.default)(path) : path\n};\nconst LOOKUP_METHOD = {\n  [_astTypes.namedTypes.ArrowFunctionExpression.name]: _getMemberExpressionValuePath.default,\n  [_astTypes.namedTypes.CallExpression.name]: _getMemberExpressionValuePath.default,\n  [_astTypes.namedTypes.FunctionExpression.name]: _getMemberExpressionValuePath.default,\n  [_astTypes.namedTypes.FunctionDeclaration.name]: _getMemberExpressionValuePath.default,\n  [_astTypes.namedTypes.VariableDeclaration.name]: _getMemberExpressionValuePath.default,\n  [_astTypes.namedTypes.ObjectExpression.name]: _getPropertyValuePath.default,\n  [_astTypes.namedTypes.ClassDeclaration.name]: _getClassMemberValuePath.default,\n  [_astTypes.namedTypes.ClassExpression.name]: _getClassMemberValuePath.default\n};\n\nfunction isSupportedDefinitionType({\n  node\n}) {\n  return _astTypes.namedTypes.ObjectExpression.check(node) || _astTypes.namedTypes.ClassDeclaration.check(node) || _astTypes.namedTypes.ClassExpression.check(node) ||\n  /**\n   * Adds support for libraries such as\n   * [styled components]{@link https://github.com/styled-components} that use\n   * TaggedTemplateExpression's to generate components.\n   *\n   * While react-docgen's built-in resolvers do not support resolving\n   * TaggedTemplateExpression definitions, third-party resolvers (such as\n   * https://github.com/Jmeyering/react-docgen-annotation-resolver) could be\n   * used to add these definitions.\n   */\n  _astTypes.namedTypes.TaggedTemplateExpression.check(node) || // potential stateless function component\n  _astTypes.namedTypes.VariableDeclaration.check(node) || _astTypes.namedTypes.ArrowFunctionExpression.check(node) || _astTypes.namedTypes.FunctionDeclaration.check(node) || _astTypes.namedTypes.FunctionExpression.check(node) ||\n  /**\n   * Adds support for libraries such as\n   * [system-components]{@link https://jxnblk.com/styled-system/system-components} that use\n   * CallExpressions to generate components.\n   *\n   * While react-docgen's built-in resolvers do not support resolving\n   * CallExpressions definitions, third-party resolvers (such as\n   * https://github.com/Jmeyering/react-docgen-annotation-resolver) could be\n   * used to add these definitions.\n   */\n  _astTypes.namedTypes.CallExpression.check(node);\n}\n/**\n * This is a helper method for handlers to make it easier to work either with\n * an ObjectExpression from `React.createClass` class or with a class\n * definition.\n *\n * Given a path and a name, this function will either return the path of the\n * property value if the path is an ObjectExpression, or the value of the\n * ClassProperty/MethodDefinition if it is a class definition (declaration or\n * expression).\n *\n * It also normalizes the names so that e.g. `defaultProps` and\n * `getDefaultProps` can be used interchangeably.\n */\n\n\nfunction getMemberValuePath(componentDefinition, memberName) {\n  if (!isSupportedDefinitionType(componentDefinition)) {\n    throw new TypeError('Got unsupported definition type. Definition must be one of ' + 'ObjectExpression, ClassDeclaration, ClassExpression,' + 'VariableDeclaration, ArrowFunctionExpression, FunctionExpression, ' + 'TaggedTemplateExpression, FunctionDeclaration or CallExpression. Got \"' + componentDefinition.node.type + '\" instead.');\n  }\n\n  const lookupMethod = LOOKUP_METHOD[componentDefinition.node.type] || _getMemberExpressionValuePath.default;\n  let result = lookupMethod(componentDefinition, memberName);\n\n  if (!result && SYNONYMS[memberName]) {\n    result = lookupMethod(componentDefinition, SYNONYMS[memberName]);\n  }\n\n  if (result && POSTPROCESS_MEMBERS[memberName]) {\n    result = POSTPROCESS_MEMBERS[memberName](result);\n  }\n\n  return result;\n}","map":{"version":3,"sources":["/Users/idesantis/Documents/GitHub/cis413-submissions-group1/ProjectOne/Isaiah-scratch/quiz-app/Isaiah's QuizApp/node_modules/react-docgen/dist/utils/getMemberValuePath.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","getMemberValuePath","_astTypes","_getClassMemberValuePath","_getMemberExpressionValuePath","_getPropertyValuePath","_resolveFunctionDefinitionToReturnValue","SYNONYMS","getDefaultProps","defaultProps","POSTPROCESS_MEMBERS","propTypes","path","namedTypes","Function","check","node","LOOKUP_METHOD","ArrowFunctionExpression","name","CallExpression","FunctionExpression","FunctionDeclaration","VariableDeclaration","ObjectExpression","ClassDeclaration","ClassExpression","isSupportedDefinitionType","TaggedTemplateExpression","componentDefinition","memberName","TypeError","type","lookupMethod","result"],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = getMemberValuePath;\n\nvar _astTypes = require(\"ast-types\");\n\nvar _getClassMemberValuePath = _interopRequireDefault(require(\"./getClassMemberValuePath\"));\n\nvar _getMemberExpressionValuePath = _interopRequireDefault(require(\"./getMemberExpressionValuePath\"));\n\nvar _getPropertyValuePath = _interopRequireDefault(require(\"./getPropertyValuePath\"));\n\nvar _resolveFunctionDefinitionToReturnValue = _interopRequireDefault(require(\"../utils/resolveFunctionDefinitionToReturnValue\"));\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nconst SYNONYMS = {\n  getDefaultProps: 'defaultProps',\n  defaultProps: 'getDefaultProps'\n};\nconst POSTPROCESS_MEMBERS = {\n  propTypes: path => _astTypes.namedTypes.Function.check(path.node) ? (0, _resolveFunctionDefinitionToReturnValue.default)(path) : path\n};\nconst LOOKUP_METHOD = {\n  [_astTypes.namedTypes.ArrowFunctionExpression.name]: _getMemberExpressionValuePath.default,\n  [_astTypes.namedTypes.CallExpression.name]: _getMemberExpressionValuePath.default,\n  [_astTypes.namedTypes.FunctionExpression.name]: _getMemberExpressionValuePath.default,\n  [_astTypes.namedTypes.FunctionDeclaration.name]: _getMemberExpressionValuePath.default,\n  [_astTypes.namedTypes.VariableDeclaration.name]: _getMemberExpressionValuePath.default,\n  [_astTypes.namedTypes.ObjectExpression.name]: _getPropertyValuePath.default,\n  [_astTypes.namedTypes.ClassDeclaration.name]: _getClassMemberValuePath.default,\n  [_astTypes.namedTypes.ClassExpression.name]: _getClassMemberValuePath.default\n};\n\nfunction isSupportedDefinitionType({\n  node\n}) {\n  return _astTypes.namedTypes.ObjectExpression.check(node) || _astTypes.namedTypes.ClassDeclaration.check(node) || _astTypes.namedTypes.ClassExpression.check(node) ||\n  /**\n   * Adds support for libraries such as\n   * [styled components]{@link https://github.com/styled-components} that use\n   * TaggedTemplateExpression's to generate components.\n   *\n   * While react-docgen's built-in resolvers do not support resolving\n   * TaggedTemplateExpression definitions, third-party resolvers (such as\n   * https://github.com/Jmeyering/react-docgen-annotation-resolver) could be\n   * used to add these definitions.\n   */\n  _astTypes.namedTypes.TaggedTemplateExpression.check(node) || // potential stateless function component\n  _astTypes.namedTypes.VariableDeclaration.check(node) || _astTypes.namedTypes.ArrowFunctionExpression.check(node) || _astTypes.namedTypes.FunctionDeclaration.check(node) || _astTypes.namedTypes.FunctionExpression.check(node) ||\n  /**\n   * Adds support for libraries such as\n   * [system-components]{@link https://jxnblk.com/styled-system/system-components} that use\n   * CallExpressions to generate components.\n   *\n   * While react-docgen's built-in resolvers do not support resolving\n   * CallExpressions definitions, third-party resolvers (such as\n   * https://github.com/Jmeyering/react-docgen-annotation-resolver) could be\n   * used to add these definitions.\n   */\n  _astTypes.namedTypes.CallExpression.check(node);\n}\n/**\n * This is a helper method for handlers to make it easier to work either with\n * an ObjectExpression from `React.createClass` class or with a class\n * definition.\n *\n * Given a path and a name, this function will either return the path of the\n * property value if the path is an ObjectExpression, or the value of the\n * ClassProperty/MethodDefinition if it is a class definition (declaration or\n * expression).\n *\n * It also normalizes the names so that e.g. `defaultProps` and\n * `getDefaultProps` can be used interchangeably.\n */\n\n\nfunction getMemberValuePath(componentDefinition, memberName) {\n  if (!isSupportedDefinitionType(componentDefinition)) {\n    throw new TypeError('Got unsupported definition type. Definition must be one of ' + 'ObjectExpression, ClassDeclaration, ClassExpression,' + 'VariableDeclaration, ArrowFunctionExpression, FunctionExpression, ' + 'TaggedTemplateExpression, FunctionDeclaration or CallExpression. Got \"' + componentDefinition.node.type + '\" instead.');\n  }\n\n  const lookupMethod = LOOKUP_METHOD[componentDefinition.node.type] || _getMemberExpressionValuePath.default;\n  let result = lookupMethod(componentDefinition, memberName);\n\n  if (!result && SYNONYMS[memberName]) {\n    result = lookupMethod(componentDefinition, SYNONYMS[memberName]);\n  }\n\n  if (result && POSTPROCESS_MEMBERS[memberName]) {\n    result = POSTPROCESS_MEMBERS[memberName](result);\n  }\n\n  return result;\n}"]},"metadata":{},"sourceType":"script"}