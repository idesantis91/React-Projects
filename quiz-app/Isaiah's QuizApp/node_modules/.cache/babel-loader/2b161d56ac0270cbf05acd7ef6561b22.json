{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.childContextTypeHandler = exports.contextTypeHandler = exports.propTypeHandler = void 0;\n\nvar _astTypes = require(\"ast-types\");\n\nvar _getPropType = _interopRequireDefault(require(\"../utils/getPropType\"));\n\nvar _getPropertyName = _interopRequireDefault(require(\"../utils/getPropertyName\"));\n\nvar _getMemberValuePath = _interopRequireDefault(require(\"../utils/getMemberValuePath\"));\n\nvar _isReactModuleName = _interopRequireDefault(require(\"../utils/isReactModuleName\"));\n\nvar _isRequiredPropType = _interopRequireDefault(require(\"../utils/isRequiredPropType\"));\n\nvar _printValue = _interopRequireDefault(require(\"../utils/printValue\"));\n\nvar _resolveToModule = _interopRequireDefault(require(\"../utils/resolveToModule\"));\n\nvar _resolveToValue = _interopRequireDefault(require(\"../utils/resolveToValue\"));\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\n\nfunction isPropTypesExpression(path) {\n  const moduleName = (0, _resolveToModule.default)(path);\n\n  if (moduleName) {\n    return (0, _isReactModuleName.default)(moduleName) || moduleName === 'ReactPropTypes';\n  }\n\n  return false;\n}\n\nfunction amendPropTypes(getDescriptor, path) {\n  if (!_astTypes.namedTypes.ObjectExpression.check(path.node)) {\n    return;\n  }\n\n  path.get('properties').each(propertyPath => {\n    switch (propertyPath.node.type) {\n      case _astTypes.namedTypes.Property.name:\n        {\n          const propName = (0, _getPropertyName.default)(propertyPath);\n          if (!propName) return;\n          const propDescriptor = getDescriptor(propName);\n          const valuePath = propertyPath.get('value');\n          const type = isPropTypesExpression(valuePath) ? (0, _getPropType.default)(valuePath) : {\n            name: 'custom',\n            raw: (0, _printValue.default)(valuePath)\n          };\n\n          if (type) {\n            propDescriptor.type = type;\n            propDescriptor.required = type.name !== 'custom' && (0, _isRequiredPropType.default)(valuePath);\n          }\n\n          break;\n        }\n\n      case _astTypes.namedTypes.SpreadElement.name:\n        {\n          const resolvedValuePath = (0, _resolveToValue.default)(propertyPath.get('argument'));\n\n          switch (resolvedValuePath.node.type) {\n            case _astTypes.namedTypes.ObjectExpression.name:\n              // normal object literal\n              amendPropTypes(getDescriptor, resolvedValuePath);\n              break;\n          }\n\n          break;\n        }\n    }\n  });\n}\n\nfunction getPropTypeHandler(propName) {\n  return function (documentation, path) {\n    let propTypesPath = (0, _getMemberValuePath.default)(path, propName);\n\n    if (!propTypesPath) {\n      return;\n    }\n\n    propTypesPath = (0, _resolveToValue.default)(propTypesPath);\n\n    if (!propTypesPath) {\n      return;\n    }\n\n    let getDescriptor;\n\n    switch (propName) {\n      case 'childContextTypes':\n        getDescriptor = documentation.getChildContextDescriptor;\n        break;\n\n      case 'contextTypes':\n        getDescriptor = documentation.getContextDescriptor;\n        break;\n\n      default:\n        getDescriptor = documentation.getPropDescriptor;\n    }\n\n    amendPropTypes(getDescriptor.bind(documentation), propTypesPath);\n  };\n}\n\nconst propTypeHandler = getPropTypeHandler('propTypes');\nexports.propTypeHandler = propTypeHandler;\nconst contextTypeHandler = getPropTypeHandler('contextTypes');\nexports.contextTypeHandler = contextTypeHandler;\nconst childContextTypeHandler = getPropTypeHandler('childContextTypes');\nexports.childContextTypeHandler = childContextTypeHandler;","map":{"version":3,"sources":["/Users/idesantis/Documents/GitHub/cis413-submissions-group1/ProjectOne/Isaiah-scratch/quiz-app/Isaiah's QuizApp/node_modules/react-docgen/dist/handlers/propTypeHandler.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","childContextTypeHandler","contextTypeHandler","propTypeHandler","_astTypes","_getPropType","_getPropertyName","_getMemberValuePath","_isReactModuleName","_isRequiredPropType","_printValue","_resolveToModule","_resolveToValue","isPropTypesExpression","path","moduleName","default","amendPropTypes","getDescriptor","namedTypes","ObjectExpression","check","node","get","each","propertyPath","type","Property","name","propName","propDescriptor","valuePath","raw","required","SpreadElement","resolvedValuePath","getPropTypeHandler","documentation","propTypesPath","getChildContextDescriptor","getContextDescriptor","getPropDescriptor","bind"],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.childContextTypeHandler = exports.contextTypeHandler = exports.propTypeHandler = void 0;\n\nvar _astTypes = require(\"ast-types\");\n\nvar _getPropType = _interopRequireDefault(require(\"../utils/getPropType\"));\n\nvar _getPropertyName = _interopRequireDefault(require(\"../utils/getPropertyName\"));\n\nvar _getMemberValuePath = _interopRequireDefault(require(\"../utils/getMemberValuePath\"));\n\nvar _isReactModuleName = _interopRequireDefault(require(\"../utils/isReactModuleName\"));\n\nvar _isRequiredPropType = _interopRequireDefault(require(\"../utils/isRequiredPropType\"));\n\nvar _printValue = _interopRequireDefault(require(\"../utils/printValue\"));\n\nvar _resolveToModule = _interopRequireDefault(require(\"../utils/resolveToModule\"));\n\nvar _resolveToValue = _interopRequireDefault(require(\"../utils/resolveToValue\"));\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nfunction isPropTypesExpression(path) {\n  const moduleName = (0, _resolveToModule.default)(path);\n\n  if (moduleName) {\n    return (0, _isReactModuleName.default)(moduleName) || moduleName === 'ReactPropTypes';\n  }\n\n  return false;\n}\n\nfunction amendPropTypes(getDescriptor, path) {\n  if (!_astTypes.namedTypes.ObjectExpression.check(path.node)) {\n    return;\n  }\n\n  path.get('properties').each(propertyPath => {\n    switch (propertyPath.node.type) {\n      case _astTypes.namedTypes.Property.name:\n        {\n          const propName = (0, _getPropertyName.default)(propertyPath);\n          if (!propName) return;\n          const propDescriptor = getDescriptor(propName);\n          const valuePath = propertyPath.get('value');\n          const type = isPropTypesExpression(valuePath) ? (0, _getPropType.default)(valuePath) : {\n            name: 'custom',\n            raw: (0, _printValue.default)(valuePath)\n          };\n\n          if (type) {\n            propDescriptor.type = type;\n            propDescriptor.required = type.name !== 'custom' && (0, _isRequiredPropType.default)(valuePath);\n          }\n\n          break;\n        }\n\n      case _astTypes.namedTypes.SpreadElement.name:\n        {\n          const resolvedValuePath = (0, _resolveToValue.default)(propertyPath.get('argument'));\n\n          switch (resolvedValuePath.node.type) {\n            case _astTypes.namedTypes.ObjectExpression.name:\n              // normal object literal\n              amendPropTypes(getDescriptor, resolvedValuePath);\n              break;\n          }\n\n          break;\n        }\n    }\n  });\n}\n\nfunction getPropTypeHandler(propName) {\n  return function (documentation, path) {\n    let propTypesPath = (0, _getMemberValuePath.default)(path, propName);\n\n    if (!propTypesPath) {\n      return;\n    }\n\n    propTypesPath = (0, _resolveToValue.default)(propTypesPath);\n\n    if (!propTypesPath) {\n      return;\n    }\n\n    let getDescriptor;\n\n    switch (propName) {\n      case 'childContextTypes':\n        getDescriptor = documentation.getChildContextDescriptor;\n        break;\n\n      case 'contextTypes':\n        getDescriptor = documentation.getContextDescriptor;\n        break;\n\n      default:\n        getDescriptor = documentation.getPropDescriptor;\n    }\n\n    amendPropTypes(getDescriptor.bind(documentation), propTypesPath);\n  };\n}\n\nconst propTypeHandler = getPropTypeHandler('propTypes');\nexports.propTypeHandler = propTypeHandler;\nconst contextTypeHandler = getPropTypeHandler('contextTypes');\nexports.contextTypeHandler = contextTypeHandler;\nconst childContextTypeHandler = getPropTypeHandler('childContextTypes');\nexports.childContextTypeHandler = childContextTypeHandler;"]},"metadata":{},"sourceType":"script"}