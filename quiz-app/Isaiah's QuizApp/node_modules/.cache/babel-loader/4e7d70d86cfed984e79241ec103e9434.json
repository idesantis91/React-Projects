{"ast":null,"code":"\"use strict\";\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\nclass Documentation {\n  constructor() {\n    this._props = new Map();\n    this._context = new Map();\n    this._childContext = new Map();\n    this._composes = new Set();\n    this._data = new Map();\n  }\n\n  addComposes(moduleName) {\n    this._composes.add(moduleName);\n  }\n\n  set(key, value) {\n    this._data.set(key, value);\n  }\n\n  get(key) {\n    return this._data.get(key);\n  }\n\n  getPropDescriptor(propName) {\n    let propDescriptor = this._props.get(propName);\n\n    if (!propDescriptor) {\n      this._props.set(propName, propDescriptor = {});\n    }\n\n    return propDescriptor;\n  }\n\n  getContextDescriptor(propName) {\n    let propDescriptor = this._context.get(propName);\n\n    if (!propDescriptor) {\n      this._context.set(propName, propDescriptor = {});\n    }\n\n    return propDescriptor;\n  }\n\n  getChildContextDescriptor(propName) {\n    let propDescriptor = this._childContext.get(propName);\n\n    if (!propDescriptor) {\n      this._childContext.set(propName, propDescriptor = {});\n    }\n\n    return propDescriptor;\n  }\n\n  toObject() {\n    const obj = {};\n\n    for (const [key, value] of this._data) {\n      obj[key] = value;\n    }\n\n    if (this._props.size > 0) {\n      obj.props = {};\n\n      for (const [propName, propDescriptor] of this._props) {\n        if (Object.keys(propDescriptor).length > 0) {\n          obj.props[propName] = propDescriptor;\n        }\n      }\n    }\n\n    if (this._context.size > 0) {\n      obj.context = {};\n\n      for (const [contextName, contextDescriptor] of this._context) {\n        if (Object.keys(contextDescriptor).length > 0) {\n          obj.context[contextName] = contextDescriptor;\n        }\n      }\n    }\n\n    if (this._childContext.size > 0) {\n      obj.childContext = {};\n\n      for (const [childContextName, childContextDescriptor] of this._childContext) {\n        obj.childContext[childContextName] = childContextDescriptor;\n      }\n    }\n\n    if (this._composes.size > 0) {\n      obj.composes = Array.from(this._composes);\n    }\n\n    return obj;\n  }\n\n}\n\nmodule.exports = Documentation;","map":{"version":3,"sources":["/Users/idesantis/Documents/GitHub/cis413-submissions-group1/ProjectOne/Isaiah-scratch/quiz-app/Isaiah's QuizApp/node_modules/react-docgen/dist/Documentation.js"],"names":["Documentation","constructor","_props","Map","_context","_childContext","_composes","Set","_data","addComposes","moduleName","add","set","key","value","get","getPropDescriptor","propName","propDescriptor","getContextDescriptor","getChildContextDescriptor","toObject","obj","size","props","Object","keys","length","context","contextName","contextDescriptor","childContext","childContextName","childContextDescriptor","composes","Array","from","module","exports"],"mappings":"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","sourcesContent":["\"use strict\";\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nclass Documentation {\n  constructor() {\n    this._props = new Map();\n    this._context = new Map();\n    this._childContext = new Map();\n    this._composes = new Set();\n    this._data = new Map();\n  }\n\n  addComposes(moduleName) {\n    this._composes.add(moduleName);\n  }\n\n  set(key, value) {\n    this._data.set(key, value);\n  }\n\n  get(key) {\n    return this._data.get(key);\n  }\n\n  getPropDescriptor(propName) {\n    let propDescriptor = this._props.get(propName);\n\n    if (!propDescriptor) {\n      this._props.set(propName, propDescriptor = {});\n    }\n\n    return propDescriptor;\n  }\n\n  getContextDescriptor(propName) {\n    let propDescriptor = this._context.get(propName);\n\n    if (!propDescriptor) {\n      this._context.set(propName, propDescriptor = {});\n    }\n\n    return propDescriptor;\n  }\n\n  getChildContextDescriptor(propName) {\n    let propDescriptor = this._childContext.get(propName);\n\n    if (!propDescriptor) {\n      this._childContext.set(propName, propDescriptor = {});\n    }\n\n    return propDescriptor;\n  }\n\n  toObject() {\n    const obj = {};\n\n    for (const [key, value] of this._data) {\n      obj[key] = value;\n    }\n\n    if (this._props.size > 0) {\n      obj.props = {};\n\n      for (const [propName, propDescriptor] of this._props) {\n        if (Object.keys(propDescriptor).length > 0) {\n          obj.props[propName] = propDescriptor;\n        }\n      }\n    }\n\n    if (this._context.size > 0) {\n      obj.context = {};\n\n      for (const [contextName, contextDescriptor] of this._context) {\n        if (Object.keys(contextDescriptor).length > 0) {\n          obj.context[contextName] = contextDescriptor;\n        }\n      }\n    }\n\n    if (this._childContext.size > 0) {\n      obj.childContext = {};\n\n      for (const [childContextName, childContextDescriptor] of this._childContext) {\n        obj.childContext[childContextName] = childContextDescriptor;\n      }\n    }\n\n    if (this._composes.size > 0) {\n      obj.composes = Array.from(this._composes);\n    }\n\n    return obj;\n  }\n\n}\n\nmodule.exports = Documentation;"]},"metadata":{},"sourceType":"script"}