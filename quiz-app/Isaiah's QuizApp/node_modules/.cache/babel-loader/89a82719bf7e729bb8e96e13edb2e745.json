{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = displayNameHandler;\n\nvar _astTypes = require(\"ast-types\");\n\nvar _getMemberValuePath = _interopRequireDefault(require(\"../utils/getMemberValuePath\"));\n\nvar _getNameOrValue = _interopRequireDefault(require(\"../utils/getNameOrValue\"));\n\nvar _isReactForwardRefCall = _interopRequireDefault(require(\"../utils/isReactForwardRefCall\"));\n\nvar _resolveToValue = _interopRequireDefault(require(\"../utils/resolveToValue\"));\n\nvar _resolveFunctionDefinitionToReturnValue = _interopRequireDefault(require(\"../utils/resolveFunctionDefinitionToReturnValue\"));\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\n\nfunction displayNameHandler(documentation, path) {\n  let displayNamePath = (0, _getMemberValuePath.default)(path, 'displayName');\n\n  if (!displayNamePath) {\n    // Function and class declarations need special treatment. The name of the\n    // function / class is the displayName\n    if (_astTypes.namedTypes.ClassDeclaration.check(path.node) || _astTypes.namedTypes.FunctionDeclaration.check(path.node)) {\n      documentation.set('displayName', (0, _getNameOrValue.default)(path.get('id')));\n    } else if (_astTypes.namedTypes.ArrowFunctionExpression.check(path.node) || _astTypes.namedTypes.FunctionExpression.check(path.node) || (0, _isReactForwardRefCall.default)(path)) {\n      let currentPath = path;\n\n      while (currentPath.parent) {\n        if (_astTypes.namedTypes.VariableDeclarator.check(currentPath.parent.node)) {\n          documentation.set('displayName', (0, _getNameOrValue.default)(currentPath.parent.get('id')));\n          return;\n        } else if (_astTypes.namedTypes.AssignmentExpression.check(currentPath.parent.node)) {\n          const leftPath = currentPath.parent.get('left');\n\n          if (_astTypes.namedTypes.Identifier.check(leftPath.node) || _astTypes.namedTypes.Literal.check(leftPath.node)) {\n            documentation.set('displayName', (0, _getNameOrValue.default)(leftPath));\n            return;\n          }\n        }\n\n        currentPath = currentPath.parent;\n      }\n    }\n\n    return;\n  }\n\n  displayNamePath = (0, _resolveToValue.default)(displayNamePath); // If display name is defined as a getter we get a function expression as\n  // value. In that case we try to determine the value from the return\n  // statement.\n\n  if (_astTypes.namedTypes.FunctionExpression.check(displayNamePath.node)) {\n    displayNamePath = (0, _resolveFunctionDefinitionToReturnValue.default)(displayNamePath);\n  }\n\n  if (!displayNamePath || !_astTypes.namedTypes.Literal.check(displayNamePath.node)) {\n    return;\n  }\n\n  documentation.set('displayName', displayNamePath.node.value);\n}","map":{"version":3,"sources":["/Users/idesantis/Documents/GitHub/cis413-submissions-group1/ProjectOne/Isaiah-scratch/quiz-app/Isaiah's QuizApp/node_modules/react-docgen/dist/handlers/displayNameHandler.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","displayNameHandler","_astTypes","_getMemberValuePath","_getNameOrValue","_isReactForwardRefCall","_resolveToValue","_resolveFunctionDefinitionToReturnValue","documentation","path","displayNamePath","namedTypes","ClassDeclaration","check","node","FunctionDeclaration","set","get","ArrowFunctionExpression","FunctionExpression","currentPath","parent","VariableDeclarator","AssignmentExpression","leftPath","Identifier","Literal"],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = displayNameHandler;\n\nvar _astTypes = require(\"ast-types\");\n\nvar _getMemberValuePath = _interopRequireDefault(require(\"../utils/getMemberValuePath\"));\n\nvar _getNameOrValue = _interopRequireDefault(require(\"../utils/getNameOrValue\"));\n\nvar _isReactForwardRefCall = _interopRequireDefault(require(\"../utils/isReactForwardRefCall\"));\n\nvar _resolveToValue = _interopRequireDefault(require(\"../utils/resolveToValue\"));\n\nvar _resolveFunctionDefinitionToReturnValue = _interopRequireDefault(require(\"../utils/resolveFunctionDefinitionToReturnValue\"));\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nfunction displayNameHandler(documentation, path) {\n  let displayNamePath = (0, _getMemberValuePath.default)(path, 'displayName');\n\n  if (!displayNamePath) {\n    // Function and class declarations need special treatment. The name of the\n    // function / class is the displayName\n    if (_astTypes.namedTypes.ClassDeclaration.check(path.node) || _astTypes.namedTypes.FunctionDeclaration.check(path.node)) {\n      documentation.set('displayName', (0, _getNameOrValue.default)(path.get('id')));\n    } else if (_astTypes.namedTypes.ArrowFunctionExpression.check(path.node) || _astTypes.namedTypes.FunctionExpression.check(path.node) || (0, _isReactForwardRefCall.default)(path)) {\n      let currentPath = path;\n\n      while (currentPath.parent) {\n        if (_astTypes.namedTypes.VariableDeclarator.check(currentPath.parent.node)) {\n          documentation.set('displayName', (0, _getNameOrValue.default)(currentPath.parent.get('id')));\n          return;\n        } else if (_astTypes.namedTypes.AssignmentExpression.check(currentPath.parent.node)) {\n          const leftPath = currentPath.parent.get('left');\n\n          if (_astTypes.namedTypes.Identifier.check(leftPath.node) || _astTypes.namedTypes.Literal.check(leftPath.node)) {\n            documentation.set('displayName', (0, _getNameOrValue.default)(leftPath));\n            return;\n          }\n        }\n\n        currentPath = currentPath.parent;\n      }\n    }\n\n    return;\n  }\n\n  displayNamePath = (0, _resolveToValue.default)(displayNamePath); // If display name is defined as a getter we get a function expression as\n  // value. In that case we try to determine the value from the return\n  // statement.\n\n  if (_astTypes.namedTypes.FunctionExpression.check(displayNamePath.node)) {\n    displayNamePath = (0, _resolveFunctionDefinitionToReturnValue.default)(displayNamePath);\n  }\n\n  if (!displayNamePath || !_astTypes.namedTypes.Literal.check(displayNamePath.node)) {\n    return;\n  }\n\n  documentation.set('displayName', displayNamePath.node.value);\n}"]},"metadata":{},"sourceType":"script"}