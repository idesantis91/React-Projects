{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = findAllReactCreateClassCalls;\n\nvar _astTypes = require(\"ast-types\");\n\nvar _isReactComponentClass = _interopRequireDefault(require(\"../utils/isReactComponentClass\"));\n\nvar _isReactCreateClassCall = _interopRequireDefault(require(\"../utils/isReactCreateClassCall\"));\n\nvar _isReactForwardRefCall = _interopRequireDefault(require(\"../utils/isReactForwardRefCall\"));\n\nvar _isStatelessComponent = _interopRequireDefault(require(\"../utils/isStatelessComponent\"));\n\nvar _normalizeClassDefinition = _interopRequireDefault(require(\"../utils/normalizeClassDefinition\"));\n\nvar _resolveToValue = _interopRequireDefault(require(\"../utils/resolveToValue\"));\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\n/**\n * Given an AST, this function tries to find all object expressions that are\n * passed to `React.createClass` calls, by resolving all references properly.\n */\n\n\nfunction findAllReactCreateClassCalls(ast) {\n  const definitions = new Set();\n\n  function classVisitor(path) {\n    if ((0, _isReactComponentClass.default)(path)) {\n      (0, _normalizeClassDefinition.default)(path);\n      definitions.add(path);\n    }\n\n    return false;\n  }\n\n  function statelessVisitor(path) {\n    if ((0, _isStatelessComponent.default)(path)) {\n      definitions.add(path);\n    }\n\n    return false;\n  }\n\n  (0, _astTypes.visit)(ast, {\n    visitFunctionDeclaration: statelessVisitor,\n    visitFunctionExpression: statelessVisitor,\n    visitArrowFunctionExpression: statelessVisitor,\n    visitClassExpression: classVisitor,\n    visitClassDeclaration: classVisitor,\n    visitCallExpression: function (path) {\n      if ((0, _isReactForwardRefCall.default)(path)) {\n        // If the the inner function was previously identified as a component\n        // replace it with the parent node\n        const inner = (0, _resolveToValue.default)(path.get('arguments', 0));\n        definitions.delete(inner);\n        definitions.add(path); // Do not traverse into arguments\n\n        return false;\n      } else if ((0, _isReactCreateClassCall.default)(path)) {\n        const resolvedPath = (0, _resolveToValue.default)(path.get('arguments', 0));\n\n        if (_astTypes.namedTypes.ObjectExpression.check(resolvedPath.node)) {\n          definitions.add(resolvedPath);\n        } // Do not traverse into arguments\n\n\n        return false;\n      } // If it is neither of the above cases we need to traverse further\n      // as this call expression could be a HOC\n\n\n      this.traverse(path);\n    }\n  });\n  return Array.from(definitions);\n}","map":{"version":3,"sources":["/Users/idesantis/Documents/GitHub/cis413-submissions-group1/ProjectOne/Isaiah-scratch/quiz-app/Isaiah's QuizApp/node_modules/react-docgen/dist/resolver/findAllComponentDefinitions.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","findAllReactCreateClassCalls","_astTypes","_isReactComponentClass","_isReactCreateClassCall","_isReactForwardRefCall","_isStatelessComponent","_normalizeClassDefinition","_resolveToValue","ast","definitions","Set","classVisitor","path","add","statelessVisitor","visit","visitFunctionDeclaration","visitFunctionExpression","visitArrowFunctionExpression","visitClassExpression","visitClassDeclaration","visitCallExpression","inner","get","delete","resolvedPath","namedTypes","ObjectExpression","check","node","traverse","Array","from"],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = findAllReactCreateClassCalls;\n\nvar _astTypes = require(\"ast-types\");\n\nvar _isReactComponentClass = _interopRequireDefault(require(\"../utils/isReactComponentClass\"));\n\nvar _isReactCreateClassCall = _interopRequireDefault(require(\"../utils/isReactCreateClassCall\"));\n\nvar _isReactForwardRefCall = _interopRequireDefault(require(\"../utils/isReactForwardRefCall\"));\n\nvar _isStatelessComponent = _interopRequireDefault(require(\"../utils/isStatelessComponent\"));\n\nvar _normalizeClassDefinition = _interopRequireDefault(require(\"../utils/normalizeClassDefinition\"));\n\nvar _resolveToValue = _interopRequireDefault(require(\"../utils/resolveToValue\"));\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\n/**\n * Given an AST, this function tries to find all object expressions that are\n * passed to `React.createClass` calls, by resolving all references properly.\n */\nfunction findAllReactCreateClassCalls(ast) {\n  const definitions = new Set();\n\n  function classVisitor(path) {\n    if ((0, _isReactComponentClass.default)(path)) {\n      (0, _normalizeClassDefinition.default)(path);\n      definitions.add(path);\n    }\n\n    return false;\n  }\n\n  function statelessVisitor(path) {\n    if ((0, _isStatelessComponent.default)(path)) {\n      definitions.add(path);\n    }\n\n    return false;\n  }\n\n  (0, _astTypes.visit)(ast, {\n    visitFunctionDeclaration: statelessVisitor,\n    visitFunctionExpression: statelessVisitor,\n    visitArrowFunctionExpression: statelessVisitor,\n    visitClassExpression: classVisitor,\n    visitClassDeclaration: classVisitor,\n    visitCallExpression: function (path) {\n      if ((0, _isReactForwardRefCall.default)(path)) {\n        // If the the inner function was previously identified as a component\n        // replace it with the parent node\n        const inner = (0, _resolveToValue.default)(path.get('arguments', 0));\n        definitions.delete(inner);\n        definitions.add(path); // Do not traverse into arguments\n\n        return false;\n      } else if ((0, _isReactCreateClassCall.default)(path)) {\n        const resolvedPath = (0, _resolveToValue.default)(path.get('arguments', 0));\n\n        if (_astTypes.namedTypes.ObjectExpression.check(resolvedPath.node)) {\n          definitions.add(resolvedPath);\n        } // Do not traverse into arguments\n\n\n        return false;\n      } // If it is neither of the above cases we need to traverse further\n      // as this call expression could be a HOC\n\n\n      this.traverse(path);\n    }\n  });\n  return Array.from(definitions);\n}"]},"metadata":{},"sourceType":"script"}