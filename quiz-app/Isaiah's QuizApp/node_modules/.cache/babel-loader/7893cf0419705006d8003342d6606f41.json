{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = normalizeClassDefinition;\n\nvar _astTypes = require(\"ast-types\");\n\nvar _getMemberExpressionRoot = _interopRequireDefault(require(\"../utils/getMemberExpressionRoot\"));\n\nvar _getMembers = _interopRequireDefault(require(\"../utils/getMembers\"));\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\n\nconst ignore = () => false;\n/**\n * Given a class definition (i.e. `class` declaration or expression), this\n * function \"normalizes\" the definition, by looking for assignments of static\n * properties and converting them to ClassProperties.\n *\n * Example:\n *\n * class MyComponent extends React.Component {\n *   // ...\n * }\n * MyComponent.propTypes = { ... };\n *\n * is converted to\n *\n * class MyComponent extends React.Component {\n *   // ...\n *   static propTypes = { ... };\n * }\n */\n\n\nfunction normalizeClassDefinition(classDefinition) {\n  let variableName;\n\n  if (_astTypes.namedTypes.ClassDeclaration.check(classDefinition.node)) {\n    // Class declarations don't have an id, e.g.: `export default class extends React.Component {}`\n    if (classDefinition.node.id) {\n      variableName = classDefinition.node.id.name;\n    }\n  } else if (_astTypes.namedTypes.ClassExpression.check(classDefinition.node)) {\n    let {\n      parentPath\n    } = classDefinition;\n\n    while (parentPath.node !== classDefinition.scope.node && !_astTypes.namedTypes.BlockStatement.check(parentPath.node)) {\n      if (_astTypes.namedTypes.VariableDeclarator.check(parentPath.node) && _astTypes.namedTypes.Identifier.check(parentPath.node.id)) {\n        variableName = parentPath.node.id.name;\n        break;\n      } else if (_astTypes.namedTypes.AssignmentExpression.check(parentPath.node) && _astTypes.namedTypes.Identifier.check(parentPath.node.left)) {\n        variableName = parentPath.node.left.name;\n        break;\n      }\n\n      parentPath = parentPath.parentPath;\n    }\n  }\n\n  if (!variableName) {\n    return;\n  }\n\n  const scopeRoot = classDefinition.scope;\n  (0, _astTypes.visit)(scopeRoot.node, {\n    visitFunction: ignore,\n    visitClassDeclaration: ignore,\n    visitClassExpression: ignore,\n    visitForInStatement: ignore,\n    visitForStatement: ignore,\n    visitAssignmentExpression: function (path) {\n      if (_astTypes.namedTypes.MemberExpression.check(path.node.left)) {\n        const first = (0, _getMemberExpressionRoot.default)(path.get('left'));\n\n        if (_astTypes.namedTypes.Identifier.check(first.node) && first.node.name === variableName) {\n          const [member] = (0, _getMembers.default)(path.get('left'));\n\n          if (member && !member.path.node.computed) {\n            const classProperty = _astTypes.builders.classProperty(member.path.node, path.node.right, null, true);\n\n            classDefinition.get('body', 'body').value.push(classProperty);\n            return false;\n          }\n        }\n\n        this.traverse(path);\n      } else {\n        return false;\n      }\n    }\n  });\n}","map":{"version":3,"sources":["/Users/idesantis/Documents/GitHub/cis413-submissions-group1/ProjectOne/Isaiah-scratch/quiz-app/Isaiah's QuizApp/node_modules/react-docgen/dist/utils/normalizeClassDefinition.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","normalizeClassDefinition","_astTypes","_getMemberExpressionRoot","_getMembers","ignore","classDefinition","variableName","namedTypes","ClassDeclaration","check","node","id","name","ClassExpression","parentPath","scope","BlockStatement","VariableDeclarator","Identifier","AssignmentExpression","left","scopeRoot","visit","visitFunction","visitClassDeclaration","visitClassExpression","visitForInStatement","visitForStatement","visitAssignmentExpression","path","MemberExpression","first","get","member","computed","classProperty","builders","right","push","traverse"],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = normalizeClassDefinition;\n\nvar _astTypes = require(\"ast-types\");\n\nvar _getMemberExpressionRoot = _interopRequireDefault(require(\"../utils/getMemberExpressionRoot\"));\n\nvar _getMembers = _interopRequireDefault(require(\"../utils/getMembers\"));\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nconst ignore = () => false;\n/**\n * Given a class definition (i.e. `class` declaration or expression), this\n * function \"normalizes\" the definition, by looking for assignments of static\n * properties and converting them to ClassProperties.\n *\n * Example:\n *\n * class MyComponent extends React.Component {\n *   // ...\n * }\n * MyComponent.propTypes = { ... };\n *\n * is converted to\n *\n * class MyComponent extends React.Component {\n *   // ...\n *   static propTypes = { ... };\n * }\n */\n\n\nfunction normalizeClassDefinition(classDefinition) {\n  let variableName;\n\n  if (_astTypes.namedTypes.ClassDeclaration.check(classDefinition.node)) {\n    // Class declarations don't have an id, e.g.: `export default class extends React.Component {}`\n    if (classDefinition.node.id) {\n      variableName = classDefinition.node.id.name;\n    }\n  } else if (_astTypes.namedTypes.ClassExpression.check(classDefinition.node)) {\n    let {\n      parentPath\n    } = classDefinition;\n\n    while (parentPath.node !== classDefinition.scope.node && !_astTypes.namedTypes.BlockStatement.check(parentPath.node)) {\n      if (_astTypes.namedTypes.VariableDeclarator.check(parentPath.node) && _astTypes.namedTypes.Identifier.check(parentPath.node.id)) {\n        variableName = parentPath.node.id.name;\n        break;\n      } else if (_astTypes.namedTypes.AssignmentExpression.check(parentPath.node) && _astTypes.namedTypes.Identifier.check(parentPath.node.left)) {\n        variableName = parentPath.node.left.name;\n        break;\n      }\n\n      parentPath = parentPath.parentPath;\n    }\n  }\n\n  if (!variableName) {\n    return;\n  }\n\n  const scopeRoot = classDefinition.scope;\n  (0, _astTypes.visit)(scopeRoot.node, {\n    visitFunction: ignore,\n    visitClassDeclaration: ignore,\n    visitClassExpression: ignore,\n    visitForInStatement: ignore,\n    visitForStatement: ignore,\n    visitAssignmentExpression: function (path) {\n      if (_astTypes.namedTypes.MemberExpression.check(path.node.left)) {\n        const first = (0, _getMemberExpressionRoot.default)(path.get('left'));\n\n        if (_astTypes.namedTypes.Identifier.check(first.node) && first.node.name === variableName) {\n          const [member] = (0, _getMembers.default)(path.get('left'));\n\n          if (member && !member.path.node.computed) {\n            const classProperty = _astTypes.builders.classProperty(member.path.node, path.node.right, null, true);\n\n            classDefinition.get('body', 'body').value.push(classProperty);\n            return false;\n          }\n        }\n\n        this.traverse(path);\n      } else {\n        return false;\n      }\n    }\n  });\n}"]},"metadata":{},"sourceType":"script"}