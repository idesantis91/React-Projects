{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isSupportedUtilityType = isSupportedUtilityType;\nexports.unwrapUtilityType = unwrapUtilityType;\n\nvar _astTypes = require(\"ast-types\");\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\n\nconst supportedUtilityTypes = new Set(['$Exact', '$ReadOnly']);\n/**\n * See `supportedUtilityTypes` for which types are supported and\n * https://flow.org/en/docs/types/utilities/ for which types are available.\n */\n\nfunction isSupportedUtilityType(path) {\n  if (_astTypes.namedTypes.GenericTypeAnnotation.check(path.node)) {\n    const idPath = path.get('id');\n    return !!idPath && supportedUtilityTypes.has(idPath.node.name);\n  }\n\n  return false;\n}\n/**\n * Unwraps well known utility types. For example:\n *\n *   $ReadOnly<T> => T\n */\n\n\nfunction unwrapUtilityType(path) {\n  while (isSupportedUtilityType(path)) {\n    path = path.get('typeParameters', 'params', 0);\n  }\n\n  return path;\n}","map":{"version":3,"sources":["/Users/idesantis/Documents/GitHub/cis413-submissions-group1/ProjectOne/Isaiah-scratch/quiz-app/Isaiah's QuizApp/node_modules/react-docgen/dist/utils/flowUtilityTypes.js"],"names":["Object","defineProperty","exports","value","isSupportedUtilityType","unwrapUtilityType","_astTypes","require","supportedUtilityTypes","Set","path","namedTypes","GenericTypeAnnotation","check","node","idPath","get","has","name"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,sBAAR,GAAiCA,sBAAjC;AACAF,OAAO,CAACG,iBAAR,GAA4BA,iBAA5B;;AAEA,IAAIC,SAAS,GAAGC,OAAO,CAAC,WAAD,CAAvB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAMC,qBAAqB,GAAG,IAAIC,GAAJ,CAAQ,CAAC,QAAD,EAAW,WAAX,CAAR,CAA9B;AACA;AACA;AACA;AACA;;AAEA,SAASL,sBAAT,CAAgCM,IAAhC,EAAsC;AACpC,MAAIJ,SAAS,CAACK,UAAV,CAAqBC,qBAArB,CAA2CC,KAA3C,CAAiDH,IAAI,CAACI,IAAtD,CAAJ,EAAiE;AAC/D,UAAMC,MAAM,GAAGL,IAAI,CAACM,GAAL,CAAS,IAAT,CAAf;AACA,WAAO,CAAC,CAACD,MAAF,IAAYP,qBAAqB,CAACS,GAAtB,CAA0BF,MAAM,CAACD,IAAP,CAAYI,IAAtC,CAAnB;AACD;;AAED,SAAO,KAAP;AACD;AACD;AACA;AACA;AACA;AACA;;;AAGA,SAASb,iBAAT,CAA2BK,IAA3B,EAAiC;AAC/B,SAAON,sBAAsB,CAACM,IAAD,CAA7B,EAAqC;AACnCA,IAAAA,IAAI,GAAGA,IAAI,CAACM,GAAL,CAAS,gBAAT,EAA2B,QAA3B,EAAqC,CAArC,CAAP;AACD;;AAED,SAAON,IAAP;AACD","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isSupportedUtilityType = isSupportedUtilityType;\nexports.unwrapUtilityType = unwrapUtilityType;\n\nvar _astTypes = require(\"ast-types\");\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nconst supportedUtilityTypes = new Set(['$Exact', '$ReadOnly']);\n/**\n * See `supportedUtilityTypes` for which types are supported and\n * https://flow.org/en/docs/types/utilities/ for which types are available.\n */\n\nfunction isSupportedUtilityType(path) {\n  if (_astTypes.namedTypes.GenericTypeAnnotation.check(path.node)) {\n    const idPath = path.get('id');\n    return !!idPath && supportedUtilityTypes.has(idPath.node.name);\n  }\n\n  return false;\n}\n/**\n * Unwraps well known utility types. For example:\n *\n *   $ReadOnly<T> => T\n */\n\n\nfunction unwrapUtilityType(path) {\n  while (isSupportedUtilityType(path)) {\n    path = path.get('typeParameters', 'params', 0);\n  }\n\n  return path;\n}"]},"metadata":{},"sourceType":"script"}