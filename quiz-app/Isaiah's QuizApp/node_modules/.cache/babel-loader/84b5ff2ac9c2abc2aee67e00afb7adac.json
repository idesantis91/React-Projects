{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = getNameOrValue;\n\nvar _astTypes = require(\"ast-types\");\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\n/**\n * If node is an Identifier, it returns its name. If it is a literal, it returns\n * its value.\n */\n\n\nfunction getNameOrValue(path, raw) {\n  const node = path.node;\n\n  switch (node.type) {\n    case _astTypes.namedTypes.Identifier.name:\n      return node.name;\n\n    case _astTypes.namedTypes.Literal.name:\n      return raw ? node.raw : node.value;\n\n    default:\n      throw new TypeError('Argument must be an Identifier or a Literal');\n  }\n}","map":{"version":3,"sources":["/Users/idesantis/Documents/GitHub/cis413-submissions-group1/ProjectOne/Isaiah-scratch/quiz-app/Isaiah's QuizApp/node_modules/react-docgen/dist/utils/getNameOrValue.js"],"names":["Object","defineProperty","exports","value","default","getNameOrValue","_astTypes","require","path","raw","node","type","namedTypes","Identifier","name","Literal","TypeError"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkBC,cAAlB;;AAEA,IAAIC,SAAS,GAAGC,OAAO,CAAC,WAAD,CAAvB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AACA,SAASF,cAAT,CAAwBG,IAAxB,EAA8BC,GAA9B,EAAmC;AACjC,QAAMC,IAAI,GAAGF,IAAI,CAACE,IAAlB;;AAEA,UAAQA,IAAI,CAACC,IAAb;AACE,SAAKL,SAAS,CAACM,UAAV,CAAqBC,UAArB,CAAgCC,IAArC;AACE,aAAOJ,IAAI,CAACI,IAAZ;;AAEF,SAAKR,SAAS,CAACM,UAAV,CAAqBG,OAArB,CAA6BD,IAAlC;AACE,aAAOL,GAAG,GAAGC,IAAI,CAACD,GAAR,GAAcC,IAAI,CAACP,KAA7B;;AAEF;AACE,YAAM,IAAIa,SAAJ,CAAc,6CAAd,CAAN;AARJ;AAUD","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = getNameOrValue;\n\nvar _astTypes = require(\"ast-types\");\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\n/**\n * If node is an Identifier, it returns its name. If it is a literal, it returns\n * its value.\n */\nfunction getNameOrValue(path, raw) {\n  const node = path.node;\n\n  switch (node.type) {\n    case _astTypes.namedTypes.Identifier.name:\n      return node.name;\n\n    case _astTypes.namedTypes.Literal.name:\n      return raw ? node.raw : node.value;\n\n    default:\n      throw new TypeError('Argument must be an Identifier or a Literal');\n  }\n}"]},"metadata":{},"sourceType":"script"}