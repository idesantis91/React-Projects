{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = match;\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\n/**\n * This function takes an AST node and matches it against \"pattern\". Pattern\n * is simply a (nested) object literal and it is traversed to see whether node\n * contains those (nested) properties with the provided values.\n */\n\nfunction match(node, pattern) {\n  if (!node) {\n    return false;\n  }\n\n  for (const prop in pattern) {\n    if (!node[prop]) {\n      return false;\n    }\n\n    if (pattern[prop] && typeof pattern[prop] === 'object') {\n      if (!match(node[prop], pattern[prop])) {\n        return false;\n      }\n    } else if (node[prop] !== pattern[prop]) {\n      return false;\n    }\n  }\n\n  return true;\n}","map":{"version":3,"sources":["/Users/idesantis/Documents/GitHub/cis413-submissions-group1/ProjectOne/Isaiah-scratch/quiz-app/Isaiah's QuizApp/node_modules/react-docgen/dist/utils/match.js"],"names":["Object","defineProperty","exports","value","default","match","node","pattern","prop"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkBC,KAAlB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AACA,SAASA,KAAT,CAAeC,IAAf,EAAqBC,OAArB,EAA8B;AAC5B,MAAI,CAACD,IAAL,EAAW;AACT,WAAO,KAAP;AACD;;AAED,OAAK,MAAME,IAAX,IAAmBD,OAAnB,EAA4B;AAC1B,QAAI,CAACD,IAAI,CAACE,IAAD,CAAT,EAAiB;AACf,aAAO,KAAP;AACD;;AAED,QAAID,OAAO,CAACC,IAAD,CAAP,IAAiB,OAAOD,OAAO,CAACC,IAAD,CAAd,KAAyB,QAA9C,EAAwD;AACtD,UAAI,CAACH,KAAK,CAACC,IAAI,CAACE,IAAD,CAAL,EAAaD,OAAO,CAACC,IAAD,CAApB,CAAV,EAAuC;AACrC,eAAO,KAAP;AACD;AACF,KAJD,MAIO,IAAIF,IAAI,CAACE,IAAD,CAAJ,KAAeD,OAAO,CAACC,IAAD,CAA1B,EAAkC;AACvC,aAAO,KAAP;AACD;AACF;;AAED,SAAO,IAAP;AACD","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = match;\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\n/**\n * This function takes an AST node and matches it against \"pattern\". Pattern\n * is simply a (nested) object literal and it is traversed to see whether node\n * contains those (nested) properties with the provided values.\n */\nfunction match(node, pattern) {\n  if (!node) {\n    return false;\n  }\n\n  for (const prop in pattern) {\n    if (!node[prop]) {\n      return false;\n    }\n\n    if (pattern[prop] && typeof pattern[prop] === 'object') {\n      if (!match(node[prop], pattern[prop])) {\n        return false;\n      }\n    } else if (node[prop] !== pattern[prop]) {\n      return false;\n    }\n  }\n\n  return true;\n}"]},"metadata":{},"sourceType":"script"}