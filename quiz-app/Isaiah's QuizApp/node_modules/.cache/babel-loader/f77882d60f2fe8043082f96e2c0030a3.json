{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isReactComponentClass;\n\nvar _astTypes = require(\"ast-types\");\n\nvar _isReactModuleName = _interopRequireDefault(require(\"./isReactModuleName\"));\n\nvar _match = _interopRequireDefault(require(\"./match\"));\n\nvar _resolveToModule = _interopRequireDefault(require(\"./resolveToModule\"));\n\nvar _resolveToValue = _interopRequireDefault(require(\"./resolveToValue\"));\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\n\nfunction isRenderMethod(node) {\n  const isProperty = node.type === 'ClassProperty';\n  return (_astTypes.namedTypes.MethodDefinition.check(node) || isProperty) && !node.computed && !node.static && (node.kind === '' || node.kind === 'method' || isProperty) && node.key.name === 'render';\n}\n/**\n * Returns `true` of the path represents a class definition which either extends\n * `React.Component` or has a superclass and implements a `render()` method.\n */\n\n\nfunction isReactComponentClass(path) {\n  const node = path.node;\n\n  if (!_astTypes.namedTypes.ClassDeclaration.check(node) && !_astTypes.namedTypes.ClassExpression.check(node)) {\n    return false;\n  } // extends something\n\n\n  if (!node.superClass) {\n    return false;\n  } // React.Component or React.PureComponent\n\n\n  const superClass = (0, _resolveToValue.default)(path.get('superClass'));\n\n  if ((0, _match.default)(superClass.node, {\n    property: {\n      name: 'Component'\n    }\n  }) || (0, _match.default)(superClass.node, {\n    property: {\n      name: 'PureComponent'\n    }\n  })) {\n    const module = (0, _resolveToModule.default)(superClass);\n\n    if (module && (0, _isReactModuleName.default)(module)) {\n      return true;\n    }\n  } // render method\n\n\n  if (node.body.body.some(isRenderMethod)) {\n    return true;\n  } // check for @extends React.Component in docblock\n\n\n  if (path.parentPath && path.parentPath.value) {\n    const classDeclaration = Array.isArray(path.parentPath.value) ? path.parentPath.value.find(function (declaration) {\n      return declaration.type === 'ClassDeclaration';\n    }) : path.parentPath.value;\n\n    if (classDeclaration && classDeclaration.leadingComments && classDeclaration.leadingComments.some(function (comment) {\n      return /@extends\\s+React\\.Component/.test(comment.value);\n    })) {\n      return true;\n    }\n  }\n\n  return false;\n}","map":{"version":3,"sources":["/Users/idesantis/Documents/GitHub/cis413-submissions-group1/ProjectOne/Isaiah-scratch/quiz-app/Isaiah's QuizApp/node_modules/react-docgen/dist/utils/isReactComponentClass.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","isReactComponentClass","_astTypes","_isReactModuleName","_match","_resolveToModule","_resolveToValue","isRenderMethod","node","isProperty","type","namedTypes","MethodDefinition","check","computed","static","kind","key","name","path","ClassDeclaration","ClassExpression","superClass","get","property","module","body","some","parentPath","classDeclaration","Array","isArray","find","declaration","leadingComments","comment","test"],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isReactComponentClass;\n\nvar _astTypes = require(\"ast-types\");\n\nvar _isReactModuleName = _interopRequireDefault(require(\"./isReactModuleName\"));\n\nvar _match = _interopRequireDefault(require(\"./match\"));\n\nvar _resolveToModule = _interopRequireDefault(require(\"./resolveToModule\"));\n\nvar _resolveToValue = _interopRequireDefault(require(\"./resolveToValue\"));\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nfunction isRenderMethod(node) {\n  const isProperty = node.type === 'ClassProperty';\n  return (_astTypes.namedTypes.MethodDefinition.check(node) || isProperty) && !node.computed && !node.static && (node.kind === '' || node.kind === 'method' || isProperty) && node.key.name === 'render';\n}\n/**\n * Returns `true` of the path represents a class definition which either extends\n * `React.Component` or has a superclass and implements a `render()` method.\n */\n\n\nfunction isReactComponentClass(path) {\n  const node = path.node;\n\n  if (!_astTypes.namedTypes.ClassDeclaration.check(node) && !_astTypes.namedTypes.ClassExpression.check(node)) {\n    return false;\n  } // extends something\n\n\n  if (!node.superClass) {\n    return false;\n  } // React.Component or React.PureComponent\n\n\n  const superClass = (0, _resolveToValue.default)(path.get('superClass'));\n\n  if ((0, _match.default)(superClass.node, {\n    property: {\n      name: 'Component'\n    }\n  }) || (0, _match.default)(superClass.node, {\n    property: {\n      name: 'PureComponent'\n    }\n  })) {\n    const module = (0, _resolveToModule.default)(superClass);\n\n    if (module && (0, _isReactModuleName.default)(module)) {\n      return true;\n    }\n  } // render method\n\n\n  if (node.body.body.some(isRenderMethod)) {\n    return true;\n  } // check for @extends React.Component in docblock\n\n\n  if (path.parentPath && path.parentPath.value) {\n    const classDeclaration = Array.isArray(path.parentPath.value) ? path.parentPath.value.find(function (declaration) {\n      return declaration.type === 'ClassDeclaration';\n    }) : path.parentPath.value;\n\n    if (classDeclaration && classDeclaration.leadingComments && classDeclaration.leadingComments.some(function (comment) {\n      return /@extends\\s+React\\.Component/.test(comment.value);\n    })) {\n      return true;\n    }\n  }\n\n  return false;\n}"]},"metadata":{},"sourceType":"script"}