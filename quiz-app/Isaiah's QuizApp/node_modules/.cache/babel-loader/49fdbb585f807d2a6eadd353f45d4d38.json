{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = componentMethodsJsDocHandler;\n\nvar _parseJsDoc = _interopRequireDefault(require(\"../utils/parseJsDoc\"));\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n// Merges two objects ignoring null/undefined.\n\n\nfunction merge(obj1, obj2) {\n  if (obj1 == null && obj2 == null) {\n    return null;\n  }\n\n  const merged = { ...obj1\n  };\n\n  for (const prop in obj2) {\n    if (obj2[prop] != null) {\n      merged[prop] = obj2[prop];\n    }\n  }\n\n  return merged;\n}\n/**\n * Extract info from the methods jsdoc blocks. Must be run after\n * flowComponentMethodsHandler.\n */\n\n\nfunction componentMethodsJsDocHandler(documentation) {\n  let methods = documentation.get('methods');\n\n  if (!methods) {\n    return;\n  }\n\n  methods = methods.map(method => {\n    if (!method.docblock) {\n      return method;\n    }\n\n    const jsDoc = (0, _parseJsDoc.default)(method.docblock);\n    const returns = merge(jsDoc.returns, method.returns);\n    const params = method.params.map(param => {\n      const jsDocParam = jsDoc.params.find(p => p.name === param.name);\n      return merge(jsDocParam, param);\n    });\n    return { ...method,\n      description: jsDoc.description || null,\n      returns,\n      params\n    };\n  });\n  documentation.set('methods', methods);\n}","map":{"version":3,"sources":["/Users/idesantis/Documents/GitHub/cis413-submissions-group1/ProjectOne/Isaiah-scratch/quiz-app/Isaiah's QuizApp/node_modules/react-docgen/dist/handlers/componentMethodsJsDocHandler.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","componentMethodsJsDocHandler","_parseJsDoc","merge","obj1","obj2","merged","prop","documentation","methods","get","map","method","docblock","jsDoc","returns","params","param","jsDocParam","find","p","name","description","set"],"mappings":"AAAA;;AAEA,IAAIA,sBAAsB,GAAGC,OAAO,CAAC,8CAAD,CAApC;;AAEAC,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkBC,4BAAlB;;AAEA,IAAIC,WAAW,GAAGR,sBAAsB,CAACC,OAAO,CAAC,qBAAD,CAAR,CAAxC;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASQ,KAAT,CAAeC,IAAf,EAAqBC,IAArB,EAA2B;AACzB,MAAID,IAAI,IAAI,IAAR,IAAgBC,IAAI,IAAI,IAA5B,EAAkC;AAChC,WAAO,IAAP;AACD;;AAED,QAAMC,MAAM,GAAG,EAAE,GAAGF;AAAL,GAAf;;AAGA,OAAK,MAAMG,IAAX,IAAmBF,IAAnB,EAAyB;AACvB,QAAIA,IAAI,CAACE,IAAD,CAAJ,IAAc,IAAlB,EAAwB;AACtBD,MAAAA,MAAM,CAACC,IAAD,CAAN,GAAeF,IAAI,CAACE,IAAD,CAAnB;AACD;AACF;;AAED,SAAOD,MAAP;AACD;AACD;AACA;AACA;AACA;;;AAGA,SAASL,4BAAT,CAAsCO,aAAtC,EAAqD;AACnD,MAAIC,OAAO,GAAGD,aAAa,CAACE,GAAd,CAAkB,SAAlB,CAAd;;AAEA,MAAI,CAACD,OAAL,EAAc;AACZ;AACD;;AAEDA,EAAAA,OAAO,GAAGA,OAAO,CAACE,GAAR,CAAYC,MAAM,IAAI;AAC9B,QAAI,CAACA,MAAM,CAACC,QAAZ,EAAsB;AACpB,aAAOD,MAAP;AACD;;AAED,UAAME,KAAK,GAAG,CAAC,GAAGZ,WAAW,CAACF,OAAhB,EAAyBY,MAAM,CAACC,QAAhC,CAAd;AACA,UAAME,OAAO,GAAGZ,KAAK,CAACW,KAAK,CAACC,OAAP,EAAgBH,MAAM,CAACG,OAAvB,CAArB;AACA,UAAMC,MAAM,GAAGJ,MAAM,CAACI,MAAP,CAAcL,GAAd,CAAkBM,KAAK,IAAI;AACxC,YAAMC,UAAU,GAAGJ,KAAK,CAACE,MAAN,CAAaG,IAAb,CAAkBC,CAAC,IAAIA,CAAC,CAACC,IAAF,KAAWJ,KAAK,CAACI,IAAxC,CAAnB;AACA,aAAOlB,KAAK,CAACe,UAAD,EAAaD,KAAb,CAAZ;AACD,KAHc,CAAf;AAIA,WAAO,EAAE,GAAGL,MAAL;AACLU,MAAAA,WAAW,EAAER,KAAK,CAACQ,WAAN,IAAqB,IAD7B;AAELP,MAAAA,OAFK;AAGLC,MAAAA;AAHK,KAAP;AAKD,GAhBS,CAAV;AAiBAR,EAAAA,aAAa,CAACe,GAAd,CAAkB,SAAlB,EAA6Bd,OAA7B;AACD","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = componentMethodsJsDocHandler;\n\nvar _parseJsDoc = _interopRequireDefault(require(\"../utils/parseJsDoc\"));\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n// Merges two objects ignoring null/undefined.\nfunction merge(obj1, obj2) {\n  if (obj1 == null && obj2 == null) {\n    return null;\n  }\n\n  const merged = { ...obj1\n  };\n\n  for (const prop in obj2) {\n    if (obj2[prop] != null) {\n      merged[prop] = obj2[prop];\n    }\n  }\n\n  return merged;\n}\n/**\n * Extract info from the methods jsdoc blocks. Must be run after\n * flowComponentMethodsHandler.\n */\n\n\nfunction componentMethodsJsDocHandler(documentation) {\n  let methods = documentation.get('methods');\n\n  if (!methods) {\n    return;\n  }\n\n  methods = methods.map(method => {\n    if (!method.docblock) {\n      return method;\n    }\n\n    const jsDoc = (0, _parseJsDoc.default)(method.docblock);\n    const returns = merge(jsDoc.returns, method.returns);\n    const params = method.params.map(param => {\n      const jsDocParam = jsDoc.params.find(p => p.name === param.name);\n      return merge(jsDocParam, param);\n    });\n    return { ...method,\n      description: jsDoc.description || null,\n      returns,\n      params\n    };\n  });\n  documentation.set('methods', methods);\n}"]},"metadata":{},"sourceType":"script"}