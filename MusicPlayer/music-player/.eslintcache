[{"/Users/idesantis/Documents/GitHub/React-Projects/MusicPlayer/music-player/src/index.js":"1","/Users/idesantis/Documents/GitHub/React-Projects/MusicPlayer/music-player/src/reportWebVitals.js":"2","/Users/idesantis/Documents/GitHub/React-Projects/MusicPlayer/music-player/src/App.js":"3","/Users/idesantis/Documents/GitHub/React-Projects/MusicPlayer/music-player/src/components/Song.js":"4","/Users/idesantis/Documents/GitHub/React-Projects/MusicPlayer/music-player/src/components/Player.js":"5","/Users/idesantis/Documents/GitHub/React-Projects/MusicPlayer/music-player/src/components/Library.js":"6","/Users/idesantis/Documents/GitHub/React-Projects/MusicPlayer/music-player/src/components/LibrarySong.js":"7","/Users/idesantis/Documents/GitHub/React-Projects/MusicPlayer/music-player/src/components/Nav.js":"8","/Users/idesantis/Documents/GitHub/React-Projects/MusicPlayer/music-player/src/data.js":"9","/Users/idesantis/Documents/GitHub/React-Projects/MusicPlayer/music-player/src/util.js":"10"},{"size":478,"mtime":1611032567196,"results":"11","hashOfConfig":"12"},{"size":362,"mtime":1611001229119,"results":"13","hashOfConfig":"12"},{"size":1763,"mtime":1619307966625,"results":"14","hashOfConfig":"12"},{"size":312,"mtime":1611167600679,"results":"15","hashOfConfig":"12"},{"size":3003,"mtime":1619308604298,"results":"16","hashOfConfig":"12"},{"size":700,"mtime":1619189667165,"results":"17","hashOfConfig":"12"},{"size":1122,"mtime":1619308379392,"results":"18","hashOfConfig":"12"},{"size":468,"mtime":1619189348408,"results":"19","hashOfConfig":"12"},{"size":2184,"mtime":1619307957914,"results":"20","hashOfConfig":"12"},{"size":279,"mtime":1619308184561,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"tejt4p",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"24"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"/Users/idesantis/Documents/GitHub/React-Projects/MusicPlayer/music-player/src/index.js",[],["45","46"],"/Users/idesantis/Documents/GitHub/React-Projects/MusicPlayer/music-player/src/reportWebVitals.js",[],"/Users/idesantis/Documents/GitHub/React-Projects/MusicPlayer/music-player/src/App.js",[],"/Users/idesantis/Documents/GitHub/React-Projects/MusicPlayer/music-player/src/components/Song.js",[],"/Users/idesantis/Documents/GitHub/React-Projects/MusicPlayer/music-player/src/components/Player.js",["47","48"],"import React, {useEffect} from 'react';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport {faAngleLeft, faAngleRight, faPlay, faPause} from '@fortawesome/free-solid-svg-icons';\nimport { NIL } from 'uuid';\nimport {playAudio} from '../util';\nconst Player = ({setSongs, setCurrentSong, songs, songInfo, setSongInfo, audioRef, currentSong, isPlaying, setIsPlaying}) =>{\n    //useEffect\n    useEffect(() => {\n        const newSongs = songs.map((song) => {\n            if(song.id === currentSong.id){\n                return{\n                    ...song,\n                    active:true,\n                };\n            }else{\n                return{\n                    ...song,\n                    active: false,\n                };\n            }\n    });\n    setSongs(newSongs);\n}, [currentSong]);\n\n    //Event Handlers\n    const playSongHandler = () =>{\n        if(isPlaying){\n        audioRef.current.pause();\n        setIsPlaying(!isPlaying);\n        }else{\n            audioRef.current.play();\n            setIsPlaying(!isPlaying);\n        }\n    };\n\n    //Function to Format Player Time\n    const getTime = (time) =>{\n        return(\n            Math.floor(time / 60) + \":\" + (\"0\" + Math.floor(time % 60)).slice(-2)\n        );\n    };\n\n    const dragHandler = (e) =>{\n        audioRef.current.currentTime = e.target.value;\n        setSongInfo({...songInfo, currentTime: e.target.value})\n    };\n\n    const skipTrackHandler = (direction) =>{\n        let currentIndex = songs.findIndex((song) => song.id === currentSong.id);\n        if(direction === 'skip-forward'){\n            setCurrentSong(songs[(currentIndex + 1) % songs.length]);\n        }\n        if(direction === 'skip-back'){\n            if((currentIndex - 1) % songs.length === -1){\n                setCurrentSong(songs[songs.length-1]);\n                //Return ends the functions after excuting the above code. \n                return;\n            }\n            setCurrentSong(songs[(currentIndex - 1) % songs.length]);\n        }\n        playAudio(isPlaying, audioRef);\n    };\n\n    return(\n        <div className=\"player\">\n            <div className=\"time-control\">\n                <p>{getTime(songInfo.currentTime)}</p>\n                <input \n                min={0} \n                max={songInfo.duration} \n                value={songInfo.currentTime}\n                onChange={dragHandler}\n                type=\"range\"\n                />\n                <p>{getTime(songInfo.duration || 0)}</p>\n            </div>\n            <div className=\"play-control\">\n                <FontAwesomeIcon onClick={() => skipTrackHandler('skip-back')} className=\"skip-back\" size=\"2x\" icon={faAngleLeft} />\n                <FontAwesomeIcon onClick={playSongHandler} className=\"play\" size=\"2x\" icon={isPlaying ? faPause : faPlay} />\n                <FontAwesomeIcon onClick={() => skipTrackHandler('skip-forward')} className=\"skip-forward\" size=\"2x\" icon={faAngleRight} />\n            </div>\n        </div>\n    );\n}\n\nexport default Player;","/Users/idesantis/Documents/GitHub/React-Projects/MusicPlayer/music-player/src/components/Library.js",[],"/Users/idesantis/Documents/GitHub/React-Projects/MusicPlayer/music-player/src/components/LibrarySong.js",["49"],"import { faPlay } from '@fortawesome/free-solid-svg-icons';\nimport React from 'react';\nimport {playAudio} from '../util';\nconst LibrarySong = ({song, songs, setCurrentSong ,id, audioRef, isPlaying, setSongs}) =>{\n    \n    const songSelectHandler =()=>{\n        setCurrentSong(song);\n        //Add Active State\n        const newSongs = songs.map((song) => {\n            if(song.id === id){\n                return{\n                    ...song,\n                    active:true,\n                };\n            }else{\n                return{\n                    ...song,\n                    active: false,\n                };\n            }\n        });\n        setSongs(newSongs);\n        //check if song is playing\n        playAudio(isPlaying, audioRef);\n    };\n\n    return(\n        <div onClick={songSelectHandler} className={`library-song ${song.active ? 'selected' : \"\"}`}>\n            <img alt={song.name} src={song.cover}></img>\n            <div className=\"song-description\">\n                <h3>{song.name}</h3>\n                <h4>{song.artist}</h4>\n            </div>\n        </div>\n    );\n}\n\nexport default LibrarySong;","/Users/idesantis/Documents/GitHub/React-Projects/MusicPlayer/music-player/src/components/Nav.js",[],"/Users/idesantis/Documents/GitHub/React-Projects/MusicPlayer/music-player/src/data.js",[],"/Users/idesantis/Documents/GitHub/React-Projects/MusicPlayer/music-player/src/util.js",[],{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","severity":1,"message":"55","line":4,"column":10,"nodeType":"56","messageId":"57","endLine":4,"endColumn":13},{"ruleId":"58","severity":1,"message":"59","line":23,"column":4,"nodeType":"60","endLine":23,"endColumn":17,"suggestions":"61"},{"ruleId":"54","severity":1,"message":"62","line":1,"column":10,"nodeType":"56","messageId":"57","endLine":1,"endColumn":16},"no-native-reassign",["63"],"no-negated-in-lhs",["64"],"no-unused-vars","'NIL' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'setSongs' and 'songs'. Either include them or remove the dependency array. If 'setSongs' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["65"],"'faPlay' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"66","fix":"67"},"Update the dependencies array to be: [currentSong, setSongs, songs]",{"range":"68","text":"69"},[796,809],"[currentSong, setSongs, songs]"]